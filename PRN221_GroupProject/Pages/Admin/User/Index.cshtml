@page
@model PRN221_GroupProject.Pages.User.IndexModel
@* @using PRN221_GroupProject.Models *@

<div style="margin: 100px 40px 40px 40px;">

    <h2>List of Customers</h2>

    <div class='Container'>
        <div class="action_bar d-flex justify-content-between">
            <form method="get" id="searchForm">
                <div class="search_bar w-100 d-flex justify-content-between">
                    @* Search Button *@
                    <div class="w-75">
                        <input name="searchTermParam" autofocus value="@Model.SearchTerm" id="searchInput"
                            class="form-control mr-sm-2" type="search" placeholder="Search">
                    </div>

                    <div class="Filter_Dropdown ms-2">
                        <button class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" type="button"
                            id="dropdownMenuButton1" aria-expanded="false">
                            Filter
                        </button>
                        @* Filter dropdown *@
                        <ul class="dropdown-menu filter-dropdown p-2" aria-labelledby="dropdownMenuButton1" id="selectFilterDD">
                            @* Status *@
                            <li>
                                <button id="StatusMenu" class="dropdown-btn" type="button">
                                    Status
                                    <i class="fa fa-caret-right"></i>
                                </button>
                                <div class="dropdown-container">
                                    <br />
                                    <label class="w-75">Active</label>
                                    <input checked="@(Model.statuses != null && Model.statuses.Contains("active"))"
                                        class="form-check-input" type="checkbox" value="active"
                                        name="statusesParam"><br /><br />
                                    <label class="w-75">InActive</label>
                                    <input checked="@(Model.statuses != null && Model.statuses.Contains("inactive"))"
                                        class="form-check-input" type="checkbox" value="inactive"
                                        name="statusesParam"><br /><br />
                                </div>
                            </li>

                            @* Filter's button group *@
                            <div class="button_group d-flex justify-content-end">
                                <button class="btn btn-secondary" id="cancelFilter" type="button">Cancel</button>
                                <button class="btn btn-primary ms-2" type="submit">Apply</button>
                            </div>
                        </ul>
                    </div>
                </div>
            </form>

            @* Action button group *@
            <div class="button_group">
                <a asp-page="Create" class="btn btn-primary">Add New</a>
                @Html.AntiForgeryToken()
                <button class="btn btn-warning" onclick="ExportExcel()">Export</button>
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#ImportModel">
                    Import
                </button>

                <!-- Modal -->
                <div class="modal fade" id="ImportModel" tabindex="-1" aria-labelledby="ImportModel" aria-hidden="true">
                    <form method="post" asp-page-handler="UploadExcel" enctype="multipart/form-data">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Import User Templates</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                </div>
                                <div class="modal-body" id="emailSendPopupBody">
                                    <div class="form-group">
                                        <label for="formFile" class="col-form-label">Select File: </label>
                                        <input type="file" name="excelFile" class="form-control" id="formFile">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                            data-bs-dismiss="modal">
                                        Close
                                    </button>
                                    <button type="submit" class="btn btn-primary">Import</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div>
            <!-- Data table -->
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center" scope="col">#</th>
                        <th class="text-center" scope="col">Name</th>
                        <th class="text-center" scope="col">Email</th>
                        <th class="text-center" scope="col">Phone Number</th>
                        <th class="text-center" scope="col">Status</th>
                        <th class="text-center" scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int index = 1;
                    }
                    @if (Model.Users != null)
                    {
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <th class="text-center" scope="row">@index</th>
                                <td class="text-center">@user.User.Name</td>
                                <td class="text-center">@user.User.Email</td>
                                <td class="text-center">@user.User.PhoneNumber</td>
                                @if (user.User.Status)
                                {
                                    <td class="text-center" style="vertical-align: middle;">
                                        <span class="status-button"
                                            style="padding: 6px 9px; border-radius: 4px ; background-color: #28a745; color: #fff;">Active</span>
                                    </td>
                                }
                                else
                                {
                                    <td class="text-center" style="vertical-align: middle;">
                                        <span class="status-button"
                                            style="padding:7px 10px; border-radius: 4px; background-color: #6c757d; color: #fff;">InActive</span>
                                    </td>
                                }

                                <!-- Action Dropdown Button -->
                                <td class="text-center">
                                    <div class="dropdown" style="margin: 3px 13px;">
                                        <a href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown"
                                            aria-expanded="false">
                                            <i class="fa-solid fa-ellipsis text-dark fs-2"></i>
                                        </a>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                            <li><a class="dropdown-item" asp-page="./Edit" asp-route-id="@user.User.Id">Edit</a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item">Send mail</a>
                                            </li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">No users found.</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <nav aria-label="Page navigation example" class="d-flex justify-content-between mh-75 align-items-center">
                <div class="w-1 h-1"></div>
                <ul class="pagination">

                    @{
                        string statusesQueryString = string.Join("&", Model.statuses?.Select((status, index) =>
                        $"statusesParam{(status.Equals("active") ? "=active" : "=inactive")}"));
                    }
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link"
                            href="?pageNumberParam=@(Model.PageNumber - 1)&pageSizeParam=@Model.PageSize@(statusesQueryString.Length > 0 ? "&" + statusesQueryString : "")@(Model.SearchTerm?.Length > 0 ? "&searchtermParam=" + Model.SearchTerm : "")"
                            aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        @*Calculate Gap Between Current Index And Current Page*@
                        int gap = Math.Abs(i - Model.PageNumber);

                        @*Still Display First And Last Page*@
                        if (i == 1 || i == Model.TotalPages)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link"
                                    href="?pageNumberParam=@i&pageSizeParam=@Model.PageSize@(statusesQueryString.Length > 0 ? "&" + statusesQueryString : "")@(Model.SearchTerm?.Length > 0 ? "&searchtermParam=" + Model.SearchTerm : "" )">@i</a>
                            </li>
                        }

                        @*Hide Button Gap Many Step With Current Page*@
                        else if (gap > 3)
                        {
                            @*Gap > 3 (The first match will be display three dots, else (gap > 4) will be hide by bootstrap
                    class
                    name)*@
                            <li class="page-item @(gap > 4 ? "d-none" : "")">
                                ...
                            </li>
                        }

                        else
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link"
                                    href="?pageNumberParam=@i&pageSizeParam=@Model.PageSize@(statusesQueryString.Length > 0 ? "&" + statusesQueryString : "")@(Model.SearchTerm?.Length > 0 ? "&searchtermParam=" + Model.SearchTerm : "" )">@i</a>
                            </li>
                        }
                    }
                    <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link"
                            href="?pageNumberParam=@Model.TotalPages&pageSizeParam=@Model.PageSize@(statusesQueryString.Length > 0 ? "&" + statusesQueryString : "")@(Model.SearchTerm?.Length > 0 ? "&searchtermParam=" + Model.SearchTerm : "")"
                            aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>

                <select id="PageSize" class="mh-30px">
                    @for (int i = 1; i <= 5; i++)
                    {
                        int value = i * 5;
                        <option selected="@(value == Model.PageSize)" value="@value">@value</option>
                    }
                </select>
            </nav>
        </div>
    </div>

    @section Scripts {
        @* Change row perpage *@
        @* <script>
    document.getElementById('PageSize').addEventListener('change', function () {
    var selectedPageSize = this.value;
    console.log(selectedPageSize);
    window.location.href = `/admin/user?pageNumberParam=@Model.PageNumber&pageSizeParam=${selectedPageSize}`;
    });
    </script> *@

        <script>
            document.getElementById('PageSize').addEventListener('change', function () {
                var selectedPageSize = this.value;
                var statusesQueryString = '@statusesQueryString';
                var searchTerm = '@Model.SearchTerm';

                // Construct the URL with filter parameters
                var newUrl = `/admin/user?pageNumberParam=@Model.PageNumber&pageSizeParam=${selectedPageSize}`;

                if (statusesQueryString) {
                    newUrl += `&${statusesQueryString}`;
                }

                if (searchTerm) {
                    newUrl += `&searchtermParam=${searchTerm}`;
                }

                window.location.href = newUrl;
            });
        </script>

        @* Drop down menu *@
        <script>
            function toggleMenu() {
                /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
                var dropdown = document.getElementsByClassName("dropdown-btn");
                var i;
                for (i = 0; i < dropdown.length; i++) {
                    dropdown[i].addEventListener("click", function () {
                        this.classList.toggle("active");
                        var dropdownContent = this.nextElementSibling;
                        if (!this.classList.contains("active")) {
                            saveStateLCS(this.id, false)
                            dropdownContent.style.display = "none";
                            this.querySelector("i").classList.remove("fa-caret-down");
                            this.querySelector("i").classList.add("fa-caret-right");
                        } else {
                            saveStateLCS(this.id, true)
                            dropdownContent.style.display = "block";
                            this.querySelector("i").classList.remove("fa-caret-right");
                            this.querySelector("i").classList.add("fa-caret-down");
                        }
                    });
                }
            }
            toggleMenu()

            //Save menu state into local storage
            function saveStateLCS(id, value) {
                localStorage.setItem(id, value);
            }

            //Get menu state from local storage when app start
            function GetStateFromLCS() {
                var dropdown = document.getElementsByClassName("dropdown-btn");
                for (i = 0; i < dropdown.length; i++) {
                    let state = localStorage.getItem(dropdown[i].id);
                    if (state == "true") {
                        dropdown[i].classList.add("active")
                        console.log("test")
                    } else {
                        dropdown[i].classList.remove("active")
                    }
                }
            }
            GetStateFromLCS()



            // Get the cancel butto
            const cancelBtn = document.getElementById('cancelFilter');

            cancelBtn.addEventListener('click', function () {
                $('input[type="checkbox"]:checked').prop('checked', false);
            });

        </script>

        @* Prevent close menu click inside bootstrap *@
        <script>
            document.querySelector('#selectFilterDD').addEventListener('click', function (event) {
                event.stopPropagation();
            });
        </script>

        @* Search *@
        <script>
            // Get the search input field
            const searchInput = document.getElementById('searchInput');

            // Set focus if value exist
            if (searchInput && searchInput.value) {
                searchInput.focus(); //sets focus to element

                //Set text cursor end of line
                var val = searchInput.value; //store the value of the element
                searchInput.value = ''; //clear the value of the element
                searchInput.value = val; //set that value back.
            }

            // Add an event listener for the input event
            searchInput.addEventListener('input', function () {
                // Get the form
                const form = document.getElementById('searchForm');
                // Submit the form
                form.submit();
            });
        </script>


        @* Export Excel *@
        <script>
            function ExportExcel() {
                var statusQueryString = '@statusesQueryString';
                var searchTerm = '@Model.SearchTerm';
                var href = `/admin/user?handler=ExportExcel&pageNumberParam=@Model.PageNumber&pageSizeParam=@Model.PageSize`;

                if (statusQueryString) {
                    href += `&${statusQueryString}`;
                }

                if (searchTerm) {
                    href += `&searchtermParam=${searchTerm}`;
                }

                window.location.href = href;
            }
        </script>
    }